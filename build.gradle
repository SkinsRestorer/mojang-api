plugins {
  id 'application'
  id 'java'
  id 'eclipse'
  id 'idea'
  id "io.spring.dependency-management" version "1.1.7"
  id "io.freefair.lombok" version "8.13.1"
}

repositories {
  maven { url 'https://repo.spring.io/milestone' }
  mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom 'io.micrometer:micrometer-bom:1.15.1'
    mavenBom 'io.netty:netty-bom:4.2.2.Final'
    mavenBom 'com.linecorp.armeria:armeria-bom:1.32.5'
    mavenBom 'io.github.resilience4j:resilience4j-bom:2.3.0'
  }
}

dependencies {
  implementation 'com.google.code.findbugs:jsr305:3.0.2'
  implementation 'com.linecorp.armeria:armeria'
  runtimeOnly 'org.slf4j:slf4j-simple:2.0.17'
  implementation "io.projectreactor.netty:reactor-netty-core:1.2.7"
  implementation "io.projectreactor.netty:reactor-netty-http:1.2.7"
  implementation 'com.google.code.gson:gson:2.13.1'
  implementation 'com.github.ben-manes.caffeine:caffeine:3.2.1'
}

application {
  mainClass.set('net.skinsrestorer.mojangapi.Main')
  applicationDefaultJvmArgs = [
    "-Djava.net.preferIPv6Addresses=true",
    "-XX:+EnableDynamicAgentLoading",
    "-XX:+UnlockExperimentalVMOptions",
    "-XX:+UseZGC",
    "-XX:+ZGenerational",
    "-XX:+AlwaysActAsServerClassMachine",
    "-XX:+UseNUMA",
    "-XX:+UseFastUnorderedTimeStamps",
    "-XX:+UseVectorCmov",
    "-XX:+UseCriticalJavaThreadPriority",
  ]
}

tasks.withType(JavaCompile).configureEach {
  sourceCompatibility = '21'
  targetCompatibility = '21'
  options.encoding = 'UTF-8'
  options.debug = true
  options.compilerArgs += '-parameters'
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
}

